{
  "name": "auto linkedin post",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": false
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -120,
        -180
      ],
      "id": "d2b5d65a-9d50-4fac-8e2e-bfc62725a2f3",
      "name": "Telegram Trigger",
      "webhookId": "de050cd7-55b1-4aa5-a485-c83e398c95b5",
      "credentials": {
        "telegramApi": {
          "id": "AY6tWc8ChqJut2m4",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "3bf5b48b-2176-472c-9391-411cda92fea9"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "by reading repo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0bcb826e-7e4b-4e87-98bf-a3f3c23bf553",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "without reading repo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1000,
        -200
      ],
      "id": "9449130f-a52e-4077-bd55-59839dc2be3c",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "anlayze the following command and determine that is the command is related to read or see the repositary from github or not .\nif the command consist keywords like github and repositary then return 1 and also return repositary name in one word only.\nif command is not related to read the repositary then return 0.\ndont explain anything .\njust analyze and do the work.\n\n {{ $json.message.text }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        440,
        -200
      ],
      "id": "20048c0c-753c-417c-a2a2-ccb95e60ceab",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        380,
        0
      ],
      "id": "ce1cd21b-84f8-4506-aba6-7e4c7e0d3ddc",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "analyze the following message and determine the repository name only. provide repository name only .not any thing else.dont give me tittle \"Repository name\" "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1600,
        -480
      ],
      "id": "47815245-678d-4cc1-9ecd-805624bce170",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1660,
        -280
      ],
      "id": "6b11296a-a744-4662-9f75-ef15564672d5",
      "name": "Groq Chat Model1",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/Ansh3721/{{ $json.output }}/readme",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        -480
      ],
      "id": "ed85d3a0-0e88-4328-83db-dfb9cd8b0d87",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "0RHK5LpBncXoyF2c",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  readme_text: Buffer.from($json[\"content\"], \"base64\").toString(\"utf-8\")\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2300,
        -480
      ],
      "id": "73492f21-9b92-423d-b33a-c3639d3c9cb4",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.readme_text }}",
        "options": {
          "systemMessage": "=üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the README file content and generate an engaging LinkedIn post that introduces the project in a professional and exciting way.\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2660,
        -480
      ],
      "id": "26be888c-6a4b-4055-b1a2-cdff96fc654e",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        2700,
        -240
      ],
      "id": "3ba766da-bc5c-4436-a352-96e8b66f4758",
      "name": "Groq Chat Model2",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "person": "wa5OhnTf6A",
        "text": "={{ $('AI Agent3').item.json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        5040,
        -200
      ],
      "id": "ea7e7763-cd1a-42ea-9902-98b7cb92feca",
      "name": "LinkedIn",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "qtMdPurBonTbG67H",
          "name": "LinkedIn account 3"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the following command and generate an engaging LinkedIn post that introduces the project in a professional and exciting way.\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\"\n\n{{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "if the input is no then generate a post for the specified user input and post it on Linkedin \nKeep the language professional \nUse hashtag at the end and make sure the content is in paragraph format\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1980,
        -180
      ],
      "id": "6adcf3fc-7abf-487c-8d05-48b8dcaeb35a",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1960,
        0
      ],
      "id": "545f912c-a315-4a51-b8a9-b9511cc54ef3",
      "name": "Groq Chat Model3",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let input = $input.first().json.output;\nlet output = +input.replace(/\\D/g, ''); // Remove non-digit characters\n\n\nreturn [{output}]; // [{\"input\":\"0{}\",\"output\":0}]\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        -200
      ],
      "id": "d64abef4-c901-4c8b-92bf-d654e84fc8d7",
      "name": "Code1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ $json.message.text }}",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "d31f5435-e435-4d62-b8bb-baae2c2790e6"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ed41e66b-06a9-478a-8436-372ddf97da39",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "={{ $json.message.photo[0].file_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        80,
        -180
      ],
      "id": "81d85e06-fbe0-4fe7-8af2-53942483bb79",
      "name": "Switch1"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/bot7665188331:AAHRid6byuaeXCtlgRogpfCYS2iUQxXfPr8/getFile?file_id={{ $('Telegram Trigger').item.json.message.photo[3].file_id }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4660,
        620
      ],
      "id": "6bee05f1-c0da-4887-af55-a7cf9d9fbd17",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot7665188331:AAHRid6byuaeXCtlgRogpfCYS2iUQxXfPr8/{{ $json[\"result\"][\"file_path\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5000,
        620
      ],
      "id": "949520bb-d93f-4e1d-b515-f07b585455b2",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.caption }}",
        "options": {
          "systemMessage": "=anlayze the following command and determine that is the command is related to read or see the repositary from github or not .\nif the command consist keywords like github and repositary then return 1 and also return repositary name in one word only.\nif command is not related to read the repositary then return 0.\ndont explain anything .\njust analyze and do the work.\n\n{{ $json.caption }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1140,
        240
      ],
      "id": "f5c8d002-e697-42a9-9f46-471d2ecb3e68",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1160,
        580
      ],
      "id": "7c8f1f1b-9cea-425c-8d54-77c434e24b3c",
      "name": "Groq Chat Model4",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  caption: String($('Telegram Trigger').first().json.message.caption)\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        160
      ],
      "id": "07546c3f-4154-4ea0-9d34-21bd861c89a1",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "let input = $input.first().json.output;\nlet output = +input.replace(/\\D/g, ''); // Remove non-digit characters\n\n\nreturn [{output}]; // [{\"input\":\"0{}\",\"output\":0}]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1540,
        240
      ],
      "id": "e26bcc65-83ac-4e6b-b97c-2f37fa196d5c",
      "name": "Code3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "a6b2f44d-f52b-40b0-9831-d2162d91bd2d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "with repo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d07a297-e6d8-43bd-b9e2-7d53333be12c",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "without repo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1740,
        240
      ],
      "id": "55a26d62-7fdb-4f2c-b2b9-868e0dfc3421",
      "name": "Switch2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code2').item.json.caption }}",
        "options": {
          "systemMessage": "analyze the following message and determine the repository name only. provide repositary name only .not any thing else .give me repositary word only ,dont give in inverted comma \nif the repository name is \"Amazon-clone\" return as it.\ndo not give me the title just give me the repository name"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2040,
        220
      ],
      "id": "eb3b6f43-ec61-4a10-8262-3d1c6640e441",
      "name": "AI Agent5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        2080,
        420
      ],
      "id": "8bb6ae3f-bdc3-450c-aa57-210a55e4beaa",
      "name": "Groq Chat Model5",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/Ansh3721/{{ $json.output }}/readme",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2420,
        220
      ],
      "id": "c4c6796b-2370-47eb-adcc-88adc3d7f3ae",
      "name": "HTTP Request3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Xb8pMHwPpRVFARhG",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  readme_text: Buffer.from($json[\"content\"], \"base64\").toString(\"utf-8\")\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2640,
        220
      ],
      "id": "7e2e1d72-04ed-4f95-b064-255758dcae32",
      "name": "Code4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.readme_text }}",
        "options": {
          "systemMessage": "üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the README file content and generate an engaging LinkedIn post that introduces the project in a professional and exciting way.\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2860,
        220
      ],
      "id": "156315e3-022c-46ea-a3f6-e26913cff290",
      "name": "AI Agent6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        2880,
        420
      ],
      "id": "6bc64f6c-cbb1-41aa-9325-3bd410654dcf",
      "name": "Groq Chat Model6",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "person": "wa5OhnTf6A",
        "text": "={{ $('AI Agent6').item.json.output }}",
        "shareMediaCategory": "IMAGE",
        "binaryPropertyName": "=data",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        5520,
        620
      ],
      "id": "60c75cd8-3ff7-4355-922f-44772426c194",
      "name": "LinkedIn1",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "qtMdPurBonTbG67H",
          "name": "LinkedIn account 3"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the following command and generate an engaging LinkedIn post that introduces the project in a professional and exciting way.\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\"\n\n\n\n {{ $('Code2').item.json.caption }}",
        "options": {
          "systemMessage": "if the input is no then generate a post for the specified user input and post it on Linkedin \nKeep the language professional \nUse hashtag at the end and make sure the content is in paragraph format"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        2140,
        640
      ],
      "id": "f58aaa99-885b-442c-876f-00445fd938e6",
      "name": "AI Agent7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        2120,
        800
      ],
      "id": "49619b59-93e1-401a-8431-043bf6b933a1",
      "name": "Groq Chat Model7",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "message": "={{ $json.output }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3160,
        -180
      ],
      "id": "671ab6a6-f0d2-4076-bccd-60b178d66e72",
      "name": "Telegram",
      "webhookId": "61253db2-f88f-4672-947c-800672cd54d4",
      "credentials": {
        "telegramApi": {
          "id": "AY6tWc8ChqJut2m4",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent3').item.json.output }}",
        "options": {
          "systemMessage": "üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the content and generate an engaging and more accurate LinkedIn post that introduces the project in a professional and exciting way.\n\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\nmake more information regarding content\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\",\"here is a rewritten version..\"\nRemind the user that since they are using free tier, they can only review check once."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        3900,
        60
      ],
      "id": "5642effe-9a96-4dc4-880a-0ba0940a9fb9",
      "name": "AI Agent8"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        3940,
        280
      ],
      "id": "9ee847b3-699b-439c-b190-2eee13da19ff",
      "name": "Groq Chat Model8",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        4100,
        280
      ],
      "id": "7f43e0ef-d6e5-46de-b52f-25ad4261f19e",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }} \n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4680,
        60
      ],
      "id": "7dd53a82-2107-4cce-8a1d-1e6a2f5273f7",
      "name": "Telegram2",
      "webhookId": "8b3ec779-0a21-480b-8555-9825986db835",
      "credentials": {
        "telegramApi": {
          "id": "AY6tWc8ChqJut2m4",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "person": "wa5OhnTf6A",
        "text": "={{ $('AI Agent8').item.json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        5040,
        60
      ],
      "id": "1a3b5d3f-eefc-4d22-ab29-f1bf65c6dfca",
      "name": "LinkedIn2",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "qtMdPurBonTbG67H",
          "name": "LinkedIn account 3"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    },
                    "id": "9f31a4f4-3b7a-4547-9700-ca78aa814adb"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d7f48870-827f-4150-b0c5-e25e50a3cb3b",
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": false,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3380,
        -180
      ],
      "id": "e5eb29b7-ba4e-4c8c-8d0a-f8317e576693",
      "name": "Switch3"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "message": "={{ $json.output }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3500,
        640
      ],
      "id": "7dab7fc4-e37f-449b-a700-e5726ebea247",
      "name": "Telegram1",
      "webhookId": "61253db2-f88f-4672-947c-800672cd54d4",
      "credentials": {
        "telegramApi": {
          "id": "AY6tWc8ChqJut2m4",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        4180,
        1040
      ],
      "id": "e74aa719-dfb2-454b-8d3a-db304a4b5ad2",
      "name": "Groq Chat Model9",
      "credentials": {
        "groqApi": {
          "id": "frnbMoeyP2sN8Bkd",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        4320,
        1040
      ],
      "id": "380743cf-2c9b-482a-b8a9-094c1f15c1b8",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }} \n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4800,
        820
      ],
      "id": "24821ddc-4907-45ab-80ba-0d5b258c9bb1",
      "name": "Telegram3",
      "webhookId": "8b3ec779-0a21-480b-8555-9825986db835",
      "credentials": {
        "telegramApi": {
          "id": "AY6tWc8ChqJut2m4",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "person": "wa5OhnTf6A",
        "text": "={{ $json.result.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        5520,
        820
      ],
      "id": "971b52b8-5703-4006-bf8e-1a5bc34cfd6a",
      "name": "LinkedIn3",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "qtMdPurBonTbG67H",
          "name": "LinkedIn account 3"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent7').item.json.output }}",
        "options": {
          "systemMessage": "üí° Role & Task:\nYou are an expert LinkedIn content creator. Your task is to read the content and generate an engaging and more accurate LinkedIn post that introduces the project in a professional and exciting way.\n\n\nüìú Instructions:\n\nStart with a greeting (e.g., \"Hello Connections,\" \"Hey everyone,\" \"Exciting news,\" etc.).\n\nProvide a clear, concise, and engaging summary of the project.\n\nHighlight what the project does and why it‚Äôs useful.\n\nUse simple, easy-to-understand language (avoid too much technical jargon).\n\nEnd with a call-to-action (e.g., ‚ÄúCheck it out,‚Äù ‚ÄúLet me know your thoughts,‚Äù ‚ÄúStar the repo if you like it,‚Äù etc.).\nadd emojis as much as possible\nmake more information regarding content\n\n\ngive only description for linked in which is directly post on linkedin.\ndont specify that it generates from a chatmodel remove the lines \"here's a linkedin post ...\",\"here is a rewritten version..\"\nRemind the user that since they are using free tier, they can only review check once."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        4220,
        820
      ],
      "id": "e78086d7-a537-45f3-aee9-5d6e250ecff4",
      "name": "AI Agent9"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    },
                    "id": "5a5adef0-9068-42a0-b91b-d9e9f5b3d36b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9259803c-0a49-47af-ab5d-4273a086323f",
                    "leftValue": "={{ $json.data.approved }}",
                    "rightValue": false,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3720,
        640
      ],
      "id": "b504d3f2-0062-4794-970c-c7241dbbc719",
      "name": "Switch4"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn": {
      "main": [
        []
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "LinkedIn1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent4": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "AI Agent5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent5": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "AI Agent6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent6": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent7": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent8": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "LinkedIn2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "LinkedIn",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn1": {
      "main": [
        []
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "LinkedIn3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent9": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent9",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent9",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8522a94e-e7cc-46a9-b621-a3a039be2d09",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6c6ffd75d4d3f007b46f43db8951b1d19a0e7976631c5523dd8e9cd44f422b75"
  },
  "id": "62GKh5AY8qKvaY3I",
  "tags": []
}